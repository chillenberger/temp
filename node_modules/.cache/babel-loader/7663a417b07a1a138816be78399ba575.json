{"ast":null,"code":"var _jsxFileName = \"/Users/danielillenberger/Documents/GitHub/django-react-webapp/frontend/src/components/charts.js\";\nimport React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { line, area } from \"d3-shape\";\nimport { Bar } from \"@nivo/bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst barColor = \"#0095ff\";\nconst lineColor = \"rgba(200, 30, 15, 1)\";\nconst areaColor = \"#0095ff\"; // `v` is used for bars\n// `v1` is used for line\n// `v2` is used for area\n\nconst data = [{\n  x: \"0\",\n  v: 3.3,\n  v1: 2.0,\n  v2: 1.2\n}, {\n  x: \"1\",\n  v: 3.5,\n  v1: 3.1,\n  v2: 1.3\n}, {\n  x: \"2\",\n  v: 3.8,\n  v1: 2.3,\n  v2: 1.1\n}, {\n  x: \"3\",\n  v: 4.1,\n  v1: 3.1,\n  v2: 2.3\n}, {\n  x: \"4\",\n  v: 4.4,\n  v1: 4.0,\n  v2: 2.6\n}, {\n  x: \"5\",\n  v: 4.7,\n  v1: 3.9,\n  v2: 2.7\n}, {\n  x: \"6\",\n  v: 4.9,\n  v1: 2.9,\n  v2: 2.3\n}, {\n  x: \"7\",\n  v: 5.2,\n  v1: 3.3,\n  v2: 1.8\n}];\n\nconst Area = _ref => {\n  let {\n    bars,\n    xScale,\n    yScale,\n    height\n  } = _ref;\n  const areaGenerator = area().x(bar => xScale(bar.data.index) + bar.width / 2).y0(() => height).y1(bar => yScale(bar.data.data.v2));\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    d: areaGenerator(bars),\n    fill: areaColor,\n    style: {\n      mixBlendMode: \"multiply\",\n      pointerEvents: \"none\"\n    },\n    opacity: 0.5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Area;\n\nconst Line = _ref2 => {\n  let {\n    bars,\n    xScale,\n    yScale\n  } = _ref2;\n  const lineGenerator = line().x(bar => xScale(bar.data.index) + bar.width / 2).y(bar => yScale(bar.data.data.v1));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: lineGenerator(bars),\n      fill: \"none\",\n      stroke: lineColor,\n      style: {\n        pointerEvents: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), bars.map(bar => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: xScale(bar.data.index) + bar.width / 2,\n      cy: yScale(bar.data.data.v1),\n      r: 4,\n      fill: \"white\",\n      stroke: lineColor,\n      style: {\n        pointerEvents: \"none\"\n      }\n    }, bar.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Line;\n\nconst barchart = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 400,\n    data: data,\n    keys: [\"v\"],\n    maxValue: 6,\n    padding: 0.6,\n    margin: {\n      top: 10,\n      right: 10,\n      bottom: 36,\n      left: 36\n    },\n    indexBy: \"x\",\n    enableLabel: false,\n    colors: [barColor],\n    borderRadius: 2,\n    axisLeft: {\n      tickValues: 7\n    },\n    layers: [\"grid\", \"axes\", \"bars\", Area, Line, \"markers\", \"legends\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this);\n\nexport { barchart };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Area\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["React","Fragment","ReactDOM","line","area","Bar","barColor","lineColor","areaColor","data","x","v","v1","v2","Area","bars","xScale","yScale","height","areaGenerator","bar","index","width","y0","y1","mixBlendMode","pointerEvents","Line","lineGenerator","y","map","key","barchart","top","right","bottom","left","tickValues"],"sources":["/Users/danielillenberger/Documents/GitHub/django-react-webapp/frontend/src/components/charts.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { line, area } from \"d3-shape\";\nimport { Bar } from \"@nivo/bar\";\n\nconst barColor = \"#0095ff\";\nconst lineColor = \"rgba(200, 30, 15, 1)\";\nconst areaColor = \"#0095ff\";\n\n// `v` is used for bars\n// `v1` is used for line\n// `v2` is used for area\nconst data = [\n  { x: \"0\", v: 3.3, v1: 2.0, v2: 1.2 },\n  { x: \"1\", v: 3.5, v1: 3.1, v2: 1.3 },\n  { x: \"2\", v: 3.8, v1: 2.3, v2: 1.1 },\n  { x: \"3\", v: 4.1, v1: 3.1, v2: 2.3 },\n  { x: \"4\", v: 4.4, v1: 4.0, v2: 2.6 },\n  { x: \"5\", v: 4.7, v1: 3.9, v2: 2.7 },\n  { x: \"6\", v: 4.9, v1: 2.9, v2: 2.3 },\n  { x: \"7\", v: 5.2, v1: 3.3, v2: 1.8 }\n];\n\nconst Area = ({ bars, xScale, yScale, height }) => {\n  const areaGenerator = area()\n    .x(bar => xScale(bar.data.index) + bar.width / 2)\n    .y0(() => height)\n    .y1(bar => yScale(bar.data.data.v2));\n\n  return (\n    <path\n      d={areaGenerator(bars)}\n      fill={areaColor}\n      style={{ mixBlendMode: \"multiply\", pointerEvents: \"none\" }}\n      opacity={0.5}\n    />\n  );\n};\n\nconst Line = ({ bars, xScale, yScale }) => {\n  const lineGenerator = line()\n    .x(bar => xScale(bar.data.index) + bar.width / 2)\n    .y(bar => yScale(bar.data.data.v1));\n\n  return (\n    <Fragment>\n      <path\n        d={lineGenerator(bars)}\n        fill=\"none\"\n        stroke={lineColor}\n        style={{ pointerEvents: \"none\" }}\n      />\n      {bars.map(bar => (\n        <circle\n          key={bar.key}\n          cx={xScale(bar.data.index) + bar.width / 2}\n          cy={yScale(bar.data.data.v1)}\n          r={4}\n          fill=\"white\"\n          stroke={lineColor}\n          style={{ pointerEvents: \"none\" }}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nconst barchart = () => (\n  <div>\n    <Bar\n      width={500}\n      height={400}\n      data={data}\n      keys={[\"v\"]}\n      maxValue={6}\n      padding={0.6}\n      margin={{\n        top: 10,\n        right: 10,\n        bottom: 36,\n        left: 36\n      }}\n      indexBy=\"x\"\n      enableLabel={false}\n      colors={[barColor]}\n      borderRadius={2}\n      axisLeft={{\n        tickValues: 7\n      }}\n      layers={[\"grid\", \"axes\", \"bars\", Area, Line, \"markers\", \"legends\"]}\n    />\n  </div>\n);\n\nexport {\n  barchart\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}