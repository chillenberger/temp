{"ast":null,"code":"var _jsxFileName = \"/Users/danielillenberger/Documents/GitHub/django-react-webapp/frontend/src/components/charts.js\";\nimport React, { Fragment } from \"react\";\nimport { Bar } from 'react-chartjs-2'; // `v` is used for bars\n// `v1` is used for line\n// `v2` is used for area\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mydata = [{\n  x: \"0\",\n  v: 3.3,\n  v1: 2.0,\n  v2: 1.2\n}, {\n  x: \"1\",\n  v: 3.5,\n  v1: 3.1,\n  v2: 1.3\n}, {\n  x: \"2\",\n  v: 3.8,\n  v1: 2.3,\n  v2: 1.1\n}, {\n  x: \"3\",\n  v: 4.1,\n  v1: 3.1,\n  v2: 2.3\n}, {\n  x: \"4\",\n  v: 4.4,\n  v1: 4.0,\n  v2: 2.6\n}, {\n  x: \"5\",\n  v: 4.7,\n  v1: 3.9,\n  v2: 2.7\n}, {\n  x: \"6\",\n  v: 4.9,\n  v1: 2.9,\n  v2: 2.3\n}, {\n  x: \"7\",\n  v: 5.2,\n  v1: 3.3,\n  v2: 1.8\n}];\n\nfunction Barchart() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ['red', 'blue', 'green']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Barchart;\nexport { Barchart };\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","Fragment","Bar","mydata","x","v","v1","v2","Barchart","labels"],"sources":["/Users/danielillenberger/Documents/GitHub/django-react-webapp/frontend/src/components/charts.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport {Bar} from 'react-chartjs-2'\n\n// `v` is used for bars\n// `v1` is used for line\n// `v2` is used for area\nconst mydata = [\n  { x: \"0\", v: 3.3, v1: 2.0, v2: 1.2 },\n  { x: \"1\", v: 3.5, v1: 3.1, v2: 1.3 },\n  { x: \"2\", v: 3.8, v1: 2.3, v2: 1.1 },\n  { x: \"3\", v: 4.1, v1: 3.1, v2: 2.3 },\n  { x: \"4\", v: 4.4, v1: 4.0, v2: 2.6 },\n  { x: \"5\", v: 4.7, v1: 3.9, v2: 2.7 },\n  { x: \"6\", v: 4.9, v1: 2.9, v2: 2.3 },\n  { x: \"7\", v: 5.2, v1: 3.3, v2: 1.8 }\n];\n\n\nfunction Barchart() {\n  return (\n    <>\n      <Bar\n        data={{\n          labels: ['red', 'blue', 'green']\n        }}\n      />\n    </>\n  )\n}\n\nexport {\n  Barchart\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,GAAR,QAAkB,iBAAlB,C,CAEA;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CADa,EAEb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CAFa,EAGb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CAHa,EAIb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CAJa,EAKb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CALa,EAMb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CANa,EAOb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CAPa,EAQb;EAAEH,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE,GAAb;EAAkBC,EAAE,EAAE,GAAtB;EAA2BC,EAAE,EAAE;AAA/B,CARa,CAAf;;AAYA,SAASC,QAAT,GAAoB;EAClB,oBACE;IAAA,uBACE,QAAC,GAAD;MACE,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB;MADJ;IADR;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;KAVQD,Q;AAYT,SACEA,QADF"},"metadata":{},"sourceType":"module"}